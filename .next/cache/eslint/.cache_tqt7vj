[{"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Create/CreateBasicInfo.tsx":"1","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/ContItem.tsx":"2","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/MainItem.tsx":"3","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/MainItemList.tsx":"4","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/MainItemScrollList.tsx":"5","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Register/RegisterFirstStep.tsx":"6","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Register/RegisterSecondStep.tsx":"7","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Register/RegisterThirdStep.tsx":"8","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/common/KeyButton.tsx":"9","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/common/QuillWrapper.tsx":"10","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/common/SelectionBadge.tsx":"11","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useAuth.ts":"12","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useCreate.ts":"13","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useDetail.ts":"14","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useLogin.ts":"15","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useMain.ts":"16","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useProcess.ts":"17","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useRegister.ts":"18","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useTest.ts":"19","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/utils/usePage.ts":"20","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/utils/useShare.ts":"21","/Users/gongsangheon/dev/personal/mindcraft-web/src/layout/AppLayout.tsx":"22","/Users/gongsangheon/dev/personal/mindcraft-web/src/layout/NavigationBar.tsx":"23","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/_app.tsx":"24","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/auth/login.tsx":"25","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/auth/register.tsx":"26","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/create/index.tsx":"27","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/detail/[id]/play.tsx":"28","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/detail/[id].tsx":"29","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/index.tsx":"30","/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/actionTypes.ts":"31","/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/auth/authAction.ts":"32","/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/auth/authReducer.ts":"33","/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/store.ts":"34","/Users/gongsangheon/dev/personal/mindcraft-web/src/service/AuthService.ts":"35","/Users/gongsangheon/dev/personal/mindcraft-web/src/service/TestService.ts":"36","/Users/gongsangheon/dev/personal/mindcraft-web/src/service/UserService.ts":"37","/Users/gongsangheon/dev/personal/mindcraft-web/src/types/api.config.ts":"38","/Users/gongsangheon/dev/personal/mindcraft-web/src/types/api.request.ts":"39","/Users/gongsangheon/dev/personal/mindcraft-web/src/types/api.response.ts":"40","/Users/gongsangheon/dev/personal/mindcraft-web/src/types/common.ts":"41","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/AnimationUtil.ts":"42","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/FromUtil.ts":"43","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/Indicator.ts":"44","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/Logger.ts":"45","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/Requester.ts":"46","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/StorageUtil.ts":"47","/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/dummy.ts":"48","/Users/gongsangheon/dev/personal/mindcraft-web/src/layout/AuthWrapper.tsx":"49"},{"size":6282,"mtime":1696575679756,"results":"50","hashOfConfig":"51"},{"size":248,"mtime":1696575679756,"results":"52","hashOfConfig":"51"},{"size":3776,"mtime":1696575679756,"results":"53","hashOfConfig":"51"},{"size":781,"mtime":1696575679757,"results":"54","hashOfConfig":"51"},{"size":720,"mtime":1696575679757,"results":"55","hashOfConfig":"51"},{"size":1054,"mtime":1696576989517,"results":"56","hashOfConfig":"51"},{"size":1040,"mtime":1696577029546,"results":"57","hashOfConfig":"51"},{"size":3050,"mtime":1696577980230,"results":"58","hashOfConfig":"51"},{"size":559,"mtime":1696575679758,"results":"59","hashOfConfig":"51"},{"size":162,"mtime":1696575679758,"results":"60","hashOfConfig":"51"},{"size":1309,"mtime":1696575679758,"results":"61","hashOfConfig":"51"},{"size":419,"mtime":1696575679758,"results":"62","hashOfConfig":"51"},{"size":7891,"mtime":1696575679759,"results":"63","hashOfConfig":"51"},{"size":592,"mtime":1696575679759,"results":"64","hashOfConfig":"51"},{"size":1863,"mtime":1696580177038,"results":"65","hashOfConfig":"51"},{"size":615,"mtime":1696579043474,"results":"66","hashOfConfig":"51"},{"size":1058,"mtime":1696575679760,"results":"67","hashOfConfig":"51"},{"size":5443,"mtime":1696581604897,"results":"68","hashOfConfig":"51"},{"size":574,"mtime":1696575679760,"results":"69","hashOfConfig":"51"},{"size":797,"mtime":1696575679760,"results":"70","hashOfConfig":"51"},{"size":598,"mtime":1696575679760,"results":"71","hashOfConfig":"51"},{"size":553,"mtime":1696575679760,"results":"72","hashOfConfig":"51"},{"size":1941,"mtime":1696578857861,"results":"73","hashOfConfig":"51"},{"size":1838,"mtime":1696579491989,"results":"74","hashOfConfig":"51"},{"size":2324,"mtime":1696575679761,"results":"75","hashOfConfig":"51"},{"size":2599,"mtime":1696575679762,"results":"76","hashOfConfig":"51"},{"size":11838,"mtime":1696575679762,"results":"77","hashOfConfig":"51"},{"size":3609,"mtime":1696575679762,"results":"78","hashOfConfig":"51"},{"size":3184,"mtime":1696576897185,"results":"79","hashOfConfig":"51"},{"size":3134,"mtime":1696579045568,"results":"80","hashOfConfig":"51"},{"size":78,"mtime":1696575679763,"results":"81","hashOfConfig":"51"},{"size":482,"mtime":1696582420932,"results":"82","hashOfConfig":"51"},{"size":811,"mtime":1696580248562,"results":"83","hashOfConfig":"51"},{"size":359,"mtime":1696575679763,"results":"84","hashOfConfig":"51"},{"size":1998,"mtime":1696581265621,"results":"85","hashOfConfig":"51"},{"size":1508,"mtime":1696575679764,"results":"86","hashOfConfig":"51"},{"size":36,"mtime":1696575679764,"results":"87","hashOfConfig":"51"},{"size":1593,"mtime":1696581227364,"results":"88","hashOfConfig":"51"},{"size":1056,"mtime":1696581210856,"results":"89","hashOfConfig":"51"},{"size":1975,"mtime":1696582030896,"results":"90","hashOfConfig":"51"},{"size":1002,"mtime":1696579112067,"results":"91","hashOfConfig":"51"},{"size":4109,"mtime":1696575679766,"results":"92","hashOfConfig":"51"},{"size":1158,"mtime":1696577487155,"results":"93","hashOfConfig":"51"},{"size":557,"mtime":1696575679766,"results":"94","hashOfConfig":"51"},{"size":505,"mtime":1696575679767,"results":"95","hashOfConfig":"51"},{"size":5081,"mtime":1696575679767,"results":"96","hashOfConfig":"51"},{"size":353,"mtime":1696580738430,"results":"97","hashOfConfig":"51"},{"size":8942,"mtime":1696575679767,"results":"98","hashOfConfig":"51"},{"size":1712,"mtime":1696582537930,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},"k9a98p",{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Create/CreateBasicInfo.tsx",["255","256"],[],"import { Box, FormLabel, HStack, Image, Input, Stack, Text, Textarea, Tooltip } from \"@chakra-ui/react\";\nimport { InfoOutlineIcon } from \"@chakra-ui/icons\";\nimport { KeyButton } from \"@/components/common/KeyButton\";\nimport React from \"react\";\n\ntype props = {\n    handleBasicInfoInput: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n    image: string;\n    resultCount: number;\n    queryCount: number;\n    answerCount: number;\n    next: () => void;\n};\n\nexport const CreateBasicInfo = ({ handleBasicInfoInput, image, resultCount, queryCount, answerCount, next }: props) => {\n    return (\n        <>\n            <Stack>\n                <Stack\n                    direction={{ base: \"column\", md: \"row\" }}\n                    w={\"full\"}\n                    alignItems={\"flex-start\"}\n                    mb={{ base: 5, md: 10 }}>\n                    {/*타이틀 및 텍스트 영역*/}\n                    <Stack m={2} w={\"full\"}>\n                        <Text fontSize={\"lg\"}>테스트 제목</Text>\n                        <Input\n                            name={\"title\"}\n                            onChange={handleBasicInfoInput}\n                            placeholder={\"심리테스트 제목을 입력해주세요.\"}\n                        />\n                        <Text fontSize={\"lg\"}>테스트 설명</Text>\n                        <Textarea\n                            name={\"description\"}\n                            onChange={handleBasicInfoInput}\n                            rows={12}\n                            placeholder={\"심리테스트에 대한 설명을 입력해주세요.\"}\n                        />\n                    </Stack>\n                    <Stack m={2} w={\"full\"} alignItems={\"flex-start\"}>\n                        <Text fontSize={\"lg\"}>테스트 이미지</Text>\n                        {/*이미지 인풋*/}\n                        <FormLabel w={\"full\"} aspectRatio={3 / 4} borderRadius={4} bg={\"gray.200\"}>\n                            {/*이미지 및 프리뷰*/}\n                            {image !== \"\" ? (\n                                <Image\n                                    w={\"full\"}\n                                    h={\"full\"}\n                                    objectFit={\"cover\"}\n                                    borderRadius={4}\n                                    src={image}\n                                    alt={\"심리테스트 이미지\"}\n                                />\n                            ) : (\n                                <Box\n                                    w={\"full\"}\n                                    h={\"full\"}\n                                    display={\"flex\"}\n                                    alignItems={\"center\"}\n                                    justifyContent={\"center\"}\n                                    textAlign={\"center\"}\n                                    color={\"gray.400\"}>\n                                    <Text>\n                                        이미지를 업로드해주세요.\n                                        <br />\n                                        (3:4 비율 권장)\n                                    </Text>\n                                </Box>\n                            )}\n\n                            <Input\n                                name={\"image\"}\n                                onChange={handleBasicInfoInput}\n                                hidden\n                                type={\"file\"}\n                                accept=\"image/*\"\n                            />\n                        </FormLabel>\n                    </Stack>\n                </Stack>\n\n                {/*숫자에 대한 값*/}\n                <Stack width={\"full\"} direction={{ base: \"column\", md: \"row\" }} mb={{ base: 5, md: 10 }}>\n                    <Stack w={\"full\"}>\n                        <HStack>\n                            <Text>결과 수</Text>\n                            <Tooltip mx={10} label={\"테스트 진행 후 사용자에게 보여질 수 있는 결과 수 입니다.(3~5개)\"}>\n                                <InfoOutlineIcon />\n                            </Tooltip>\n                        </HStack>\n                        <Input\n                            aria-label={\"테스트 결과 수\"}\n                            name={\"resultCount\"}\n                            onChange={handleBasicInfoInput}\n                            placeholder={\"결과 수 (3~5개)\"}\n                            type={\"number\"}\n                            max={5}\n                            min={3}\n                        />\n                    </Stack>\n                    <Stack w={\"full\"}>\n                        <HStack>\n                            <Text>질문 수</Text>\n                            <Tooltip mx={10} label={\"사용자가 진행할 질문 수입니다. (3~5개)\"}>\n                                <InfoOutlineIcon />\n                            </Tooltip>\n                        </HStack>\n                        <Input\n                            name={\"queryCount\"}\n                            onChange={handleBasicInfoInput}\n                            value={queryCount}\n                            placeholder={\"질문 수\"}\n                            type={\"number\"}\n                            max={5}\n                            min={3}\n                        />\n                    </Stack>\n                    <Stack w={\"full\"}>\n                        <HStack>\n                            <Text>응답 수</Text>\n                            <Tooltip mx={10} label={\"사용자가 진행할 질문의 대답의 수입니다. (2~4개)\"}>\n                                <InfoOutlineIcon />\n                            </Tooltip>\n                        </HStack>\n\n                        <Input\n                            name={\"answerCount\"}\n                            onChange={handleBasicInfoInput}\n                            placeholder={\"질문 수\"}\n                            type={\"number\"}\n                            max={4}\n                            min={2}\n                        />\n                    </Stack>\n                </Stack>\n            </Stack>\n\n            <KeyButton onClick={next} text={\"다음\"} />\n        </>\n    );\n};\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/ContItem.tsx",["257"],[],"import { HStack, Image, Text } from \"@chakra-ui/react\";\n\nexport const ContItem = (src: string, count: number) => {\n    return (\n        <HStack>\n            <Image h={\"8px\"} src={src} />\n            <Text>{count}</Text>\n        </HStack>\n    );\n};\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/MainItem.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/MainItemList.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/MainItem/MainItemScrollList.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Register/RegisterFirstStep.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Register/RegisterSecondStep.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/Register/RegisterThirdStep.tsx",["258","259"],[],"import { Button, FormControl, FormLabel, HStack, Image, Input, Stack } from \"@chakra-ui/react\";\nimport { colors } from \"@/types/common\";\nimport React from \"react\";\n\ntype props = {\n    handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    handleImageChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    requestRegister: () => void;\n    loadingRegister: boolean;\n    image?: string;\n};\n\nexport const RegisterThirdStep = ({\n    handleInputChange,\n    handleImageChange,\n    requestRegister,\n    loadingRegister,\n    image\n}: props) => {\n    return (\n        <>\n            <Stack direction={\"row\"} width={\"full\"} justifyContent={\"space-between\"}>\n                <Stack width={\"55%\"} display={\"flex\"} alignItems={\"center\"}>\n                    <FormControl isRequired>\n                        <FormLabel>비밀번호</FormLabel>\n                        {/*비밀번호 입력*/}\n                        <Input\n                            placeholder=\"비밀번호\"\n                            mb={3}\n                            type=\"password\"\n                            name={\"password\"}\n                            onChange={handleInputChange}\n                        />\n                        <Input\n                            placeholder={\"비밀번호 확인\"}\n                            mb={3}\n                            type={\"password\"}\n                            name={\"passwordCheck\"}\n                            onChange={handleInputChange}\n                        />\n                        <FormLabel>닉네임</FormLabel>\n                        <Input\n                            placeholder={\"닉네임\"}\n                            mb={3}\n                            type={\"text\"}\n                            name={\"username\"}\n                            onChange={handleInputChange}\n                        />\n                    </FormControl>\n                </Stack>\n\n                <Stack width={\"40%\"} display={\"flex\"} alignItems={\"center\"} height={\"full\"}>\n                    <FormControl>\n                        <FormLabel boxSize={\"full\"}>\n                            프로필 이미지\n                            <Image\n                                src={image}\n                                aspectRatio={1}\n                                objectFit={\"cover\"}\n                                borderRadius={8}\n                                fallbackSrc=\"https://via.placeholder.com/150\"\n                            />\n                        </FormLabel>\n                        {/*비밀번호 입력*/}\n                        <Input hidden type=\"file\" accept=\"image/*\" name={\"image\"} onChange={handleImageChange} />\n                    </FormControl>\n                </Stack>\n            </Stack>\n            <Button\n                width={\"100%\"}\n                color={\"white\"}\n                bg={colors.key}\n                onClick={requestRegister}\n                isLoading={loadingRegister}>\n                회원 가입 요청\n            </Button>\n        </>\n    );\n};\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/components/common/KeyButton.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/common/QuillWrapper.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/components/common/SelectionBadge.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useAuth.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useCreate.ts",["260"],[],"import React, { useEffect, useState } from \"react\";\nimport { MainTestBasicInfo, MindTestQueryItem, MindTestResultItem } from \"@/types/common\";\nimport AnimationUtil from \"../utils/AnimationUtil\";\n\ntype basicInfo = {\n    title: string;\n    description: string;\n    image: string;\n    resultCount: 3 | 4 | 5;\n    queryCount: 3 | 4 | 5;\n    answerCount: 2 | 3 | 4;\n};\n\nexport const useCreate = () => {\n    const [step, setStep] = useState(0);\n\n    const [basicInfo, setBasicInfo] = React.useState<MainTestBasicInfo>({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n        resultCount: 3,\n        queryCount: 3,\n        answerCount: 2\n    });\n\n    //결과 정보\n    const [resultItems, setResultItems] = React.useState<MindTestResultItem[]>([]);\n\n    //질문 정보\n    const [queryItems, setQueryItems] = React.useState<MindTestQueryItem[]>([]);\n\n    const [resultShowIndex, setResultShowIndex] = useState(0);\n    const [queryShowIndex, setQueryShowIndex] = useState(0);\n\n    useEffect(() => {}, []);\n\n    const next = () => {\n        switch (step) {\n            case 0:\n                basicInfoNext();\n                break;\n            case 1:\n                resultNext();\n                break;\n            case 2:\n                submit();\n                break;\n        }\n    };\n\n    const basicInfoNext = () => {\n        //TODO: 기본 정보 검증\n\n        initResultItems();\n        initQueryItems();\n        setStep((prevState) => prevState + 1);\n    };\n\n    const resultNext = () => {\n        //TODO: 결과 정보 검증\n\n        setStep((prevState) => prevState + 1);\n    };\n\n    const submit = () => {\n        //TODO : 질문 정보 검증\n\n        console.log(\"basicInfo\", basicInfo);\n        console.log(\"resultItems\", resultItems);\n        console.log(\"queryItems\", queryItems);\n    };\n\n    /**** 초기화 함수 ***/\n    const initResultItems = () => {\n        const items: MindTestResultItem[] = [];\n        for (let i = 0; i < basicInfo.resultCount; i++) {\n            items.push({\n                title: \"\",\n                description: \"\",\n                image: \"\"\n            });\n        }\n        setResultItems(items);\n    };\n\n    const initQueryItems = () => {\n        const items: MindTestQueryItem[] = [];\n        for (let i = 0; i < basicInfo.queryCount; i++) {\n            items.push({\n                step: i + 1,\n                text: \"\",\n                answers: []\n            });\n        }\n\n        items.map((queryItem) => {\n            for (let i = 0; i < basicInfo.answerCount; i++) {\n                queryItem.answers.push({\n                    text: \"\",\n                    resultIndex: 0\n                });\n            }\n        });\n\n        setQueryItems(items);\n    };\n\n    /**** 이벤트 핸들러 ****/\n    const handleBasicInfoInput = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const value = e.target.value;\n        setBasicInfo((prev) => {\n            const newInfo = { ...prev };\n            switch (e.target.name) {\n                case \"title\":\n                case \"description\":\n                    newInfo[e.target.name] = value;\n                    break;\n                case \"image\":\n                    const imageTarget = e.target as HTMLInputElement;\n                    const file = imageTarget.files?.[0];\n                    if (file) {\n                        const reader = new FileReader();\n                        reader.onloadend = () => {\n                            setBasicInfo((prev) => ({\n                                ...prev,\n                                image: reader.result as string\n                            }));\n                        };\n                        reader.readAsDataURL(file);\n                    }\n                    break;\n                case \"resultCount\":\n                case \"queryCount\":\n                case \"answerCount\":\n                    const numberTarget = e.target as HTMLInputElement;\n                    const max = Number(numberTarget.max);\n                    const min = Number(numberTarget.min);\n\n                    let numberValue = Number(value);\n                    if (numberValue > max) {\n                        numberValue = max;\n                    }\n                    if (numberValue < min) {\n                        numberValue = min;\n                    }\n\n                    newInfo[e.target.name] = numberValue as any;\n            }\n\n            return newInfo;\n        });\n    };\n\n    const handleResultItemInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const _index = e.target.dataset.index;\n        const index = Number(_index);\n\n        const value = e.target.value;\n        setResultItems((prev) => {\n            const newItems = [...prev];\n            switch (e.target.id) {\n                case \"result-item-title\":\n                    newItems[index].title = value;\n                    break;\n                case \"result-item-image\":\n                    const target = e.target as HTMLInputElement;\n                    const file = target.files?.[0];\n                    if (file) {\n                        const reader = new FileReader();\n                        reader.onloadend = () => {\n                            newItems[index].image = reader.result as string;\n                            setResultItems(newItems);\n                        };\n                        reader.readAsDataURL(file);\n                    }\n                    break;\n            }\n            return newItems;\n        });\n    };\n\n    const handleQueryItemInput = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const _index = e.target.dataset.index;\n        const index = Number(_index);\n\n        const value = e.target.value;\n        setQueryItems((prev) => {\n            const newItems = [...prev];\n            switch (e.target.id) {\n                case \"query-item-text\":\n                    newItems[index].text = value;\n                    break;\n                case \"query-item-answer\":\n                    newItems[queryShowIndex].answers[index].text = value;\n                    break;\n                case \"query-item-result\":\n                    newItems[queryShowIndex].answers[index].resultIndex = Number(value);\n                    break;\n            }\n\n            console.log(newItems);\n\n            return newItems;\n        });\n    };\n\n    const handleResultHtmlInput = (value: string) => {\n        setResultItems((prev) => {\n            const newItems = [...prev];\n            newItems[resultShowIndex].description = value;\n            return newItems;\n        });\n    };\n\n    /**** 기타 함수 ****/\n    const setResultScroll = async (index: number) => {\n        setResultShowIndex(index);\n        await new Promise((resolve) => setTimeout(resolve, 0)); // 상태 업데이트를 기다림\n\n        const target = document.getElementById(\"result-item-list\");\n        if (!target) {\n            console.error(\"Element not found\");\n            return;\n        }\n\n        await AnimationUtil.smoothScroll(target, target.offsetWidth * index, 0, 300);\n    };\n\n    const setQueryScroll = async (index: number) => {\n        setQueryShowIndex(index);\n        await new Promise((resolve) => setTimeout(resolve, 0)); // 상태 업데이트를 기다림\n\n        const target = document.getElementById(\"query-item-list\");\n        if (!target) {\n            console.error(\"Element not found\");\n            return;\n        }\n\n        await AnimationUtil.smoothScroll(target, target.offsetWidth * index, 0, 300);\n    };\n\n    return {\n        basicInfo,\n        resultItems,\n        queryItems,\n        handleBasicInfoInput,\n        handleResultItemInput,\n        handleQueryItemInput,\n        handleResultHtmlInput,\n\n        resultShowIndex,\n        setResultScroll,\n        queryShowIndex,\n        setQueryScroll,\n\n        step,\n\n        next\n    };\n};\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useDetail.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useLogin.ts",["261"],[],"import React from \"react\";\nimport { usePage } from \"./utils/usePage\";\nimport { AuthService } from \"@/service/AuthService\";\nimport { User } from \"@/types/common\";\nimport { login, logout } from \"@/redux/auth/authAction\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport StorageUtil from \"@/utils/StorageUtil\";\n\nexport const useLogin = () => {\n    //커스텀 후 참조\n    const { toMain } = usePage();\n    const { auth, authDispatch, user } = useAuth();\n\n    //지역 관리 상태\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [form, setForm] = React.useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    // 이벤트 핸들러\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n        setForm({ ...form, [e.target.name]: e.target.value });\n\n    // 로그인/로그아웃 요청 함수\n    const signIn = async () => {\n        const res = await AuthService.signIn(form.email, form.password);\n        if (res.isSuccess && res.data) {\n            authDispatch(\n                login({\n                    email: form.email,\n                    id: res.data.id,\n                    username: res.data.username,\n                    imageUrl: res.data.imageUrl,\n                    token: res.data.token\n                })\n            );\n            //@ts-ignore\n            StorageUtil.setToken(res.data.token.token as string);\n            await toMain();\n        } else {\n            alert(`아이디와 비밀번호를 확인해주세요.`);\n        }\n    };\n\n    const signOut = async () => {\n        authDispatch(logout());\n        await toMain();\n    };\n\n    return {\n        showPassword,\n        auth,\n        user,\n\n        handleInputChange,\n        handleClickShowPassword,\n        signIn,\n        signOut\n    };\n};\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useMain.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useProcess.ts",["262"],[],"import { useState } from \"react\";\nimport { MindTestQueryItem } from \"@/types/common\";\nimport { testDetialDummy } from \"@/utils/dummy\";\nimport AnimationUtil from \"../utils/AnimationUtil\";\n\nexport const useProcess = () => {\n    const [queryIndex, setQueryIndex] = useState<number>(0);\n    const [query, setQuery] = useState<MindTestQueryItem[]>(testDetialDummy);\n    const [selected, setSelected] = useState<{ step: number; index: number }[]>([]);\n\n    const toNext = async (selectIndex: number) => {\n        setSelected([...selected, { step: queryIndex, index: selectIndex }]);\n        //에니메이션 처리\n        const target = document.getElementById(\"query-list\");\n        if (!target) return;\n        await AnimationUtil.smoothScroll(target, target.offsetWidth * (queryIndex + 1), 0, 100);\n        setQueryIndex(queryIndex + 1);\n\n        //TODO : 완료가 된 상태 처리\n        if (query.length === queryIndex + 1) {\n            console.log(selected);\n        }\n    };\n\n    return {\n        queryIndex,\n\n        query,\n\n        toNext\n    };\n};\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useRegister.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/useTest.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/utils/usePage.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/hooks/utils/useShare.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/layout/AppLayout.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/layout/NavigationBar.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/_app.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/auth/login.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/auth/register.tsx",["263","264"],[],"import { Heading, Stack, Step, StepIcon, StepIndicator, Stepper, StepSeparator, StepStatus } from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { useRegister } from \"@/hooks/useRegister\";\nimport { colors } from \"@/types/common\";\nimport { RegisterFirstStep } from \"@/components/Register/RegisterFirstStep\";\nimport { RegisterSecondStep } from \"@/components/Register/RegisterSecondStep\";\nimport { RegisterThirdStep } from \"@/components/Register/RegisterThirdStep\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { usePage } from \"@/hooks/utils/usePage\";\n\nexport function Register() {\n    const hook = useRegister();\n    const activeStepText = hook.steps[hook.activeStep].description;\n    const { auth } = useAuth();\n    const { toMain } = usePage();\n\n    useEffect(() => {\n        auth && toMain();\n    }, []);\n\n    return (\n        <Stack maxW={\"400px\"} mx={\"auto\"} my={\"8vh\"} direction={\"column\"} alignItems={\"center\"}>\n            <Stack width={\"100%\"}>\n                <Stepper width={\"60%\"} mx={\"auto\"} size=\"sm\" index={hook.activeStep} gap=\"1\">\n                    {hook.steps.map((step, index) => (\n                        <Step key={index}>\n                            <StepIndicator>\n                                <StepStatus complete={<StepIcon />} />\n                            </StepIndicator>\n                            <StepSeparator />\n                        </Step>\n                    ))}\n                </Stepper>\n            </Stack>\n\n            <Heading width={\"full\"} textAlign={\"center\"} my={30}>\n                {activeStepText}\n            </Heading>\n            {hook.activeStep === 0 ? (\n                <RegisterFirstStep\n                    handleInputChange={hook.handleInputChange}\n                    requestCodeSend={hook.requestCodeSend}\n                    loadingEmailCode={hook.loadings.loadingEmailCode}\n                />\n            ) : hook.activeStep === 1 ? (\n                <RegisterSecondStep\n                    requestCodeSubmit={hook.requestCodeSubmit}\n                    loadingEmailCodeSubmit={hook.loadings.loadingEmailCodeSubmit}\n                />\n            ) : hook.activeStep === 2 ? (\n                <RegisterThirdStep\n                    handleInputChange={hook.handleInputChange}\n                    handleImageChange={hook.handleImageChange}\n                    requestRegister={hook.requestRegister}\n                    loadingRegister={hook.loadings.loadingRegister}\n                    image={hook.form.image}\n                />\n            ) : null}\n        </Stack>\n    );\n}\n\nexport default Register;\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/create/index.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/detail/[id]/play.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/detail/[id].tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/pages/index.tsx",["265"],[],"import { MainItemList } from \"@/components/MainItem/MainItemList\";\nimport { Stack, Box, HStack, Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { colors, MindTestItem } from \"@/types/common\";\nimport { SelectionBadge } from \"@/components/common/SelectionBadge\";\nimport React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport { MainItemScrollList } from \"@/components/MainItem/MainItemScrollList\";\nimport { useMain } from \"@/hooks/useMain\";\nimport { SmallAddIcon } from \"@chakra-ui/icons\";\nimport TestService from \"@/service/TestService\";\nimport Head from \"next/head\";\nimport image from \"@/assets/demo.jpg\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\ntype Props = {\n    bestItem: MindTestItem[];\n    items: MindTestItem[];\n};\n\nexport const getServerSideProps: GetServerSideProps = async () => {\n    const res = await TestService.getTestList();\n\n    if (res.isSuccess && res.data) {\n        return {\n            props: {\n                bestItem: res.data,\n                items: res.data\n            }\n        };\n    }\n\n    return {\n        props: {}\n    };\n};\n\nexport const Index = ({ bestItem, items }: Props) => {\n    const hook = useMain();\n\n    return (\n        <>\n            <Head>\n                <meta name=\"description\" content=\"친구들과 함께하는 테스트 만들기 서비스, 마인드크래프트\" />\n                <meta property=\"og:description\" content=\"친구들과 함께하는 테스트 만들기 서비스, 마인드크래프트\" />\n                <meta property=\"og:image\" content={image.src} />\n            </Head>\n\n            <Stack>\n                <Box w={\"100%\"}>\n                    <HStack justify={\"space-between\"} align={\"end\"}>\n                        <SelectionBadge isSelected>추천 리스트</SelectionBadge>\n                        <Button size={\"sm\"} color={\"white\"} bg={colors.key} onClick={hook.handleClickToCreate}>\n                            <SmallAddIcon />\n                        </Button>\n                    </HStack>\n                    <MainItemScrollList items={bestItem} />\n                </Box>\n\n                <ButtonGroup>\n                    <SelectionBadge\n                        onClick={() => {\n                            hook.setSelectedIndex(0);\n                        }}\n                        isSelected={hook.selectedIndex === 0}>\n                        최신\n                    </SelectionBadge>\n                    <SelectionBadge\n                        onClick={() => {\n                            hook.setSelectedIndex(1);\n                        }}\n                        isSelected={hook.selectedIndex === 1}>\n                        베스트\n                    </SelectionBadge>\n                    <SelectionBadge\n                        onClick={() => {\n                            hook.setSelectedIndex(2);\n                        }}\n                        isSelected={hook.selectedIndex === 2}>\n                        최다 공유\n                    </SelectionBadge>\n                </ButtonGroup>\n\n                <MainItemList items={items} />\n            </Stack>\n        </>\n    );\n};\n\nexport default Index;\n","/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/actionTypes.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/auth/authAction.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/auth/authReducer.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/redux/store.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/service/AuthService.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/service/TestService.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/service/UserService.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/types/api.config.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/types/api.request.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/types/api.response.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/types/common.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/AnimationUtil.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/FromUtil.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/Indicator.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/Logger.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/Requester.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/StorageUtil.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/utils/dummy.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-web/src/layout/AuthWrapper.tsx",[],["266"],{"ruleId":"267","severity":1,"message":"268","line":15,"column":64,"nodeType":"269","messageId":"270","endLine":15,"endColumn":75},{"ruleId":"267","severity":1,"message":"271","line":15,"column":89,"nodeType":"269","messageId":"270","endLine":15,"endColumn":100},{"ruleId":"272","severity":1,"message":"273","line":6,"column":13,"nodeType":"274","endLine":6,"endColumn":42},{"ruleId":"267","severity":1,"message":"275","line":1,"column":42,"nodeType":"269","messageId":"270","endLine":1,"endColumn":48},{"ruleId":"272","severity":1,"message":"273","line":56,"column":29,"nodeType":"274","endLine":62,"endColumn":31},{"ruleId":"267","severity":1,"message":"276","line":5,"column":6,"nodeType":"269","messageId":"270","endLine":5,"endColumn":15},{"ruleId":"267","severity":1,"message":"277","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":14},{"ruleId":"267","severity":1,"message":"278","line":8,"column":19,"nodeType":"269","messageId":"270","endLine":8,"endColumn":27},{"ruleId":"267","severity":1,"message":"279","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":19,"column":8,"nodeType":"282","endLine":19,"endColumn":10,"suggestions":"283"},{"ruleId":"267","severity":1,"message":"284","line":13,"column":10,"nodeType":"269","messageId":"270","endLine":13,"endColumn":17},{"ruleId":"280","severity":1,"message":"285","line":47,"column":8,"nodeType":"282","endLine":47,"endColumn":10,"suggestions":"286","suppressions":"287"},"@typescript-eslint/no-unused-vars","'resultCount' is defined but never used. Allowed unused args must match /^_/u.","Identifier","unusedVar","'answerCount' is defined but never used. Allowed unused args must match /^_/u.","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'HStack' is defined but never used.","'basicInfo' is defined but never used.","'User' is defined but never used.","'setQuery' is assigned a value but never used.","'colors' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth' and 'toMain'. Either include them or remove the dependency array.","ArrayExpression",["288"],"'useAuth' is defined but never used.","React Hook useEffect has missing dependencies: 'auth' and 'authDispatch'. Either include them or remove the dependency array.",["289"],["290"],{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"kind":"295","justification":"296"},"Update the dependencies array to be: [auth, toMain]",{"range":"297","text":"298"},"Update the dependencies array to be: [auth, authDispatch]",{"range":"299","text":"300"},"directive","",[829,831],"[auth, toMain]",[1539,1541],"[auth, authDispatch]"]