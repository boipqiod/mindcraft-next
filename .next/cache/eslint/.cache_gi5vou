[{"/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/ContItem.tsx":"1","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/MainItem.tsx":"2","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/MainItemList.tsx":"3","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/MainItemScrollList.tsx":"4","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/common/KeyButton.tsx":"5","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/common/SelectionBadge.tsx":"6","/Users/gongsangheon/dev/personal/mindcraft-next/src/context/AuthProvider.tsx":"7","/Users/gongsangheon/dev/personal/mindcraft-next/src/context/TestProvider.tsx":"8","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useAuth.ts":"9","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useCreate.ts":"10","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useDetail.ts":"11","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useLogin.ts":"12","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useMain.ts":"13","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useRegister.ts":"14","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useTest.ts":"15","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/utils/usePage.ts":"16","/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/utils/useShare.ts":"17","/Users/gongsangheon/dev/personal/mindcraft-next/src/layout/AppLayout.tsx":"18","/Users/gongsangheon/dev/personal/mindcraft-next/src/layout/NavigationBar.tsx":"19","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/_app.tsx":"20","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/auth/login.tsx":"21","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/auth/register.tsx":"22","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/create/index.tsx":"23","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/detail/[id].tsx":"24","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/index.tsx":"25","/Users/gongsangheon/dev/personal/mindcraft-next/src/service/AuthService.ts":"26","/Users/gongsangheon/dev/personal/mindcraft-next/src/service/TestService.ts":"27","/Users/gongsangheon/dev/personal/mindcraft-next/src/types/api.config.ts":"28","/Users/gongsangheon/dev/personal/mindcraft-next/src/types/api.request.ts":"29","/Users/gongsangheon/dev/personal/mindcraft-next/src/types/api.response.ts":"30","/Users/gongsangheon/dev/personal/mindcraft-next/src/types/common.ts":"31","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/FromUtil.ts":"32","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/Indicator.ts":"33","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/Logger.ts":"34","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/PageUtil.ts":"35","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/Requester.ts":"36","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/dummy.ts":"37","/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/AnimationUtil.ts":"38"},{"size":273,"mtime":1693056512615,"results":"39","hashOfConfig":"40"},{"size":3631,"mtime":1693102677470,"results":"41","hashOfConfig":"40"},{"size":812,"mtime":1693056676561,"results":"42","hashOfConfig":"40"},{"size":720,"mtime":1693056676561,"results":"43","hashOfConfig":"40"},{"size":560,"mtime":1693056676561,"results":"44","hashOfConfig":"40"},{"size":907,"mtime":1693056512615,"results":"45","hashOfConfig":"40"},{"size":637,"mtime":1693101186332,"results":"46","hashOfConfig":"40"},{"size":664,"mtime":1693056676561,"results":"47","hashOfConfig":"40"},{"size":146,"mtime":1693056512616,"results":"48","hashOfConfig":"40"},{"size":7851,"mtime":1693291879413,"results":"49","hashOfConfig":"40"},{"size":995,"mtime":1693101794228,"results":"50","hashOfConfig":"40"},{"size":1022,"mtime":1693102736445,"results":"51","hashOfConfig":"40"},{"size":431,"mtime":1693101011603,"results":"52","hashOfConfig":"40"},{"size":4550,"mtime":1693102771432,"results":"53","hashOfConfig":"40"},{"size":515,"mtime":1693056676563,"results":"54","hashOfConfig":"40"},{"size":638,"mtime":1693100641838,"results":"55","hashOfConfig":"40"},{"size":515,"mtime":1693056512617,"results":"56","hashOfConfig":"40"},{"size":676,"mtime":1693056512618,"results":"57","hashOfConfig":"40"},{"size":1855,"mtime":1693101154632,"results":"58","hashOfConfig":"40"},{"size":1406,"mtime":1693291940705,"results":"59","hashOfConfig":"40"},{"size":2540,"mtime":1693103148360,"results":"60","hashOfConfig":"40"},{"size":6216,"mtime":1693103148363,"results":"61","hashOfConfig":"40"},{"size":20232,"mtime":1693291992684,"results":"62","hashOfConfig":"40"},{"size":2430,"mtime":1693101518673,"results":"63","hashOfConfig":"40"},{"size":2519,"mtime":1693103488445,"results":"64","hashOfConfig":"40"},{"size":1640,"mtime":1693056512619,"results":"65","hashOfConfig":"40"},{"size":1038,"mtime":1693056512620,"results":"66","hashOfConfig":"40"},{"size":1357,"mtime":1693056512620,"results":"67","hashOfConfig":"40"},{"size":848,"mtime":1693056512621,"results":"68","hashOfConfig":"40"},{"size":2024,"mtime":1693056512621,"results":"69","hashOfConfig":"40"},{"size":838,"mtime":1693199769193,"results":"70","hashOfConfig":"40"},{"size":1161,"mtime":1693056512621,"results":"71","hashOfConfig":"40"},{"size":552,"mtime":1693056512621,"results":"72","hashOfConfig":"40"},{"size":450,"mtime":1693056512621,"results":"73","hashOfConfig":"40"},{"size":1781,"mtime":1693056512621,"results":"74","hashOfConfig":"40"},{"size":4935,"mtime":1693056512621,"results":"75","hashOfConfig":"40"},{"size":7420,"mtime":1693199769193,"results":"76","hashOfConfig":"40"},{"size":4066,"mtime":1693199610518,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"1i8td1j",{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/ContItem.tsx",["196"],[],"import {HStack, Image, Text} from \"@chakra-ui/react\";\n\nexport const ContItem = (src: string, count: number) => {\n    return (\n        <HStack>\n            <Image h={\"8px\"} src={src}/>\n            <Text>\n                {count}\n            </Text>\n        </HStack>\n    )\n}\n","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/MainItem.tsx",["197"],[],"import {Box, Text, HStack, AspectRatio, Image, Avatar} from \"@chakra-ui/react\";\n\nimport i_play from '../../assets/i-play-g.png';\nimport i_share from '../../assets/i-share-g.png';\nimport i_share_d from '../../assets/i-share-d.png';\nimport {colors} from \"@/types/common\";\nimport {usePage} from \"@/hooks/utils/usePage\";\nimport {useShare} from \"@/hooks/utils/useShare\";\nimport {ContItem} from \"./ContItem\";\n\ntype MainItemProps = {\n    id: number;\n    title: string;\n    sharedCount: number;\n    playedCount: number;\n    url: string;\n}\n\nexport const MainItem = (props: MainItemProps) => {\n\n    const {toDetail} = usePage()\n    const {share} = useShare()\n\n    const onClick = () => {\n        toDetail(props.id)\n    }\n\n    const onShare = () => {\n        share(props.title, `${window.location.href}test/${props.id}`).then()\n    }\n\n    //오버레이 영역\n    const overlay = () => {\n        return <Box\n            pos={\"absolute\"}\n            zIndex={1}\n            p={2}\n            width={\"full\"}\n            display={\"flex\"}\n            h={\"10%\"}\n            justifyContent={\"space-between\"}\n        >\n            <Box\n                h={7}\n                borderRadius={4}\n                bg={\"rgba(255, 255, 255, 0.5)\"}\n                display={\"flex\"}\n                alignItems={\"center\"}\n                p={1}\n            >\n                <Avatar width={5} height={5} src='https://bit.ly/broken-link'/>\n                <Text fontSize={\"8px\"} fontWeight={\"bold\"} px={1}>김민수</Text>\n            </Box>\n            <Avatar onClick={onShare} bg={colors.key} p={1} w={7} h={7} src={i_share_d.src}/>\n        </Box>\n    }\n\n\n    return (\n        <Box\n            pos={\"relative\"}\n            aspectRatio={{base: 3/4.8, sm: 3/4.8}}\n            minW={{base: \"100%\", sm: \"calc(100%/2 - 14px)\", md: \"calc(100%/3 - 16px)\"}}\n            w={{base: \"100%\", sm: \"calc(100%/2 - 14px)\", md: \"calc(100%/3 - 16px)\"}}\n            boxShadow={\"0px 4px 4px 0px rgba(0, 0, 0, 0.25);\"}\n            alignItems={\"start\"}\n            borderRadius={4}\n            overflow={\"hidden\"}\n            m={\"5px\"}\n            p={0}\n        >\n\n            {/*오버레이 영역*/}\n            {overlay()}\n\n            {/*컨텐츠 영역*/}\n            <Box\n                width={\"100%\"}\n                height={\"100%\"}\n                onClick={onClick}\n                cursor={\"pointer\"}\n            >\n                {/*사진 영역*/}\n                <AspectRatio\n                    width={\"100%\"}\n                    height={\"75%\"}\n                    m={0}\n                    ratio={3/4}\n                >\n                    <Image src={props.url}/>\n                </AspectRatio>\n\n                {/*텍스트 영역*/}\n                <Box\n                    width={\"100%\"}\n                    height={\"25%\"}\n                    px={2}\n\n                    display={\"flex\"}\n                    flexDirection={\"column\"}\n                    justifyContent={\"center\"}\n                    onClick={onClick}\n                    cursor={\"pointer\"}\n                >\n\n                    {/*타이틀*/}\n                    <Text\n                        isTruncated\n                        fontSize={\"12px\"}\n                    >\n                        {props.title}\n                    </Text>\n\n                    {/*카운트*/}\n                    <HStack\n                        fontSize={\"xs\"}\n                    >\n                        {ContItem(i_play.src, props.playedCount)}\n                        {ContItem(i_share.src, props.sharedCount)}\n                    </HStack>\n                </Box>\n            </Box>\n\n\n        </Box>\n\n    )\n}\n","/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/MainItemList.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/components/MainItem/MainItemScrollList.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/components/common/KeyButton.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/components/common/SelectionBadge.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/context/AuthProvider.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/context/TestProvider.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useAuth.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useCreate.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useDetail.ts",[],["198"],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useLogin.ts",[],["199"],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useMain.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useRegister.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/useTest.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/utils/usePage.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/hooks/utils/useShare.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/layout/AppLayout.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/layout/NavigationBar.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/_app.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/auth/login.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/auth/register.tsx",["200"],[],"import {\n    Button, FormControl, FormLabel,\n    Heading, HStack, Image,\n    Input, PinInput, PinInputField,\n    Stack,\n    Step,\n    StepIcon,\n    StepIndicator,\n    Stepper,\n    StepSeparator,\n    StepStatus,\n    Text\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {useRegister} from \"@/hooks/useRegister\";\nimport {colors} from \"@/types/common\";\n\nexport function Register() {\n    const register = useRegister()\n    const activeStepText = register.steps[register.activeStep].description\n\n    const firstStep = () => {\n        return (\n            <>\n                <FormControl isRequired width={\"80%\"}>\n                    <FormLabel>이메일</FormLabel>\n                    {/*이메일 입력*/}\n                    <Input\n                        placeholder='mindcraft@example.com'\n                        mb={3}\n                        type='email'\n                        value={register.email}\n                        onChange={register.handleEmailChange}\n                    />\n                    <Button\n                        width={\"100%\"}\n                        color={\"white\"}\n                        bg={colors.key}\n                        onClick={register.requestCodeSend}\n                        isLoading={register.loadingEmailCode}\n                    >\n                        인증 메일 발송</Button>\n                </FormControl>\n            </>\n        )\n    }\n    const secondStep = () => {\n        return (\n            <Stack>\n                {/*이메일 코드 입력*/}\n                <FormControl display={\"flex\"} flexDirection={'column'} justifyContent={\"center\"} isRequired>\n                    <FormLabel>인증 번호</FormLabel>\n                    <HStack>\n                        <PinInput\n                            onComplete={register.requestCodeSubmit}\n                            isDisabled={register.loadingEmailCodeSubmit}\n                        >\n                            <PinInputField/>\n                            <PinInputField/>\n                            <PinInputField/>\n                            <PinInputField/>\n                        </PinInput>\n                    </HStack>\n                </FormControl>\n            </Stack>\n        )\n    }\n    const thirdStep = () => {\n        return (\n            <>\n                <HStack width={\"full\"} justifyContent={\"space-between\"}>\n\n                    <Stack width={\"55%\"} display={\"flex\"} alignItems={\"center\"}>\n                        <FormControl isRequired>\n                            <FormLabel>비밀번호</FormLabel>\n                            {/*비밀번호 입력*/}\n                            <Input\n                                placeholder='비밀번호'\n                                mb={3}\n                                type='password'\n                                value={register.password}\n                                onChange={register.handlePasswordChange}\n                            />\n                            <Input\n                                placeholder='비밀번호 확인'\n                                mb={3}\n                                type='password'\n                                value={register.passwordCheck}\n                                onChange={register.handlePasswordCheckChange}\n                            />\n                            <FormLabel>닉네임</FormLabel>\n                            <Input\n                                placeholder='닉네임'\n                                mb={3}\n                                type='text'\n                                value={register.nickname}\n                                onChange={register.handleNicknameChange}\n                            />\n                        </FormControl>\n                    </Stack>\n\n                    <Stack width={\"40%\"} display={\"flex\"} alignItems={\"center\"} height={\"full\"}>\n                        <FormControl>\n                            <FormLabel boxSize={\"full\"}>\n                                프로필 이미지\n                                <Image src='gibbresh.png' fallbackSrc='https://via.placeholder.com/150'/>\n                            </FormLabel>\n                            {/*비밀번호 입력*/}\n                            <Input\n                                hidden\n                                type=\"file\"\n                                accept=\"image/*\"\n                                value={register.image}\n                                onChange={register.handleImageChange}\n                            />\n                        </FormControl>\n                    </Stack>\n\n                </HStack>\n                <Button\n                    width={\"100%\"}\n                    color={\"white\"}\n                    bg={colors.key}\n                    onClick={register.requestRegister}\n                    isLoading={register.loadingRegister}\n                >\n                    회원 가입 요청</Button>\n            </>\n        )\n    }\n\n    return (\n        <Stack\n            maxW={\"400px\"}\n            width={\"80%\"}\n            height={\"80%\"}\n            mx={\"auto\"}\n            my={\"8vh\"}\n            direction={\"column\"}\n            alignItems={\"center\"}\n        >\n            <Stack\n                width={\"100%\"}\n            >\n                <Text width={\"100%\"} textAlign={\"center\"}>{activeStepText}</Text>\n\n                <Stepper size='sm' index={register.activeStep} gap='1'>\n                    {register.steps.map((step, index) => (\n                        <Step key={index}>\n                            <StepIndicator>\n                                <StepStatus complete={<StepIcon/>}/>\n                            </StepIndicator>\n                            <StepSeparator/>\n                        </Step>\n                    ))}\n                </Stepper>\n\n            </Stack>\n\n            <Heading width={\"full\"} textAlign={\"center\"} my={30}>회원 가입</Heading>\n            {\n                register.activeStep === 0 ? firstStep() :\n                    register.activeStep === 1 ? secondStep() :\n                        register.activeStep === 2 ? thirdStep() : null\n            }\n        </Stack>\n    )\n\n}\n\nexport default Register\n","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/create/index.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/detail/[id].tsx",["201"],[],"import {Button, Heading, HStack, Image, Stack, Text} from \"@chakra-ui/react\";\nimport i_play from \"@/assets/i-play-g.png\";\nimport i_share from \"@/assets/i-share-g.png\";\nimport React from \"react\";\nimport {useDetail} from \"@/hooks/useDetail\";\nimport {useShare} from \"@/hooks/utils/useShare\";\nimport {ContItem} from \"@/components/MainItem/ContItem\";\nexport default function Id(){\n    const {item, toBack} = useDetail()\n    const {share} = useShare()\n\n    const onShare = () => {\n        if (!item) return\n        share(item.title ?? \"MindCraft\", `${window.location.href}`).then()\n    }\n    return (\n        <>\n\n            <Stack\n                pos={\"relative\"}\n                alignItems={\"center\"}\n            >\n                <Button\n                    pos={\"absolute\"}\n                    left={0}\n                    colorScheme={\"transparent\"}\n                    color={\"black\"}\n                    onClick={toBack}\n                >{\"<\"}</Button>\n\n                <Heading\n                    width={\"full\"}\n                    textAlign={\"center\"}\n                    mb={10}\n                >{item?.title}</Heading>\n\n                <Stack\n                    width={{base: \"90%\", md: \"300px\"}}\n                    alignItems={\"center\"}\n                >\n                    <Image\n                        src={item?.url}\n                        aspectRatio={3 / 4}\n                        borderRadius={4}\n                        objectFit='cover'\n                    />\n\n                    <Text\n                        p={5}\n                        mb={10}\n                        textAlign={\"center\"}\n                    >\n                        {item?.description}\n                    </Text>\n\n                    <HStack\n                        fontSize={\"xs\"}\n                        mb={3}\n                    >\n                        {ContItem(i_play.src, item?.playedCount ?? 0)}\n                        {ContItem(i_share.src, item?.sharedCount ?? 0)}\n                    </HStack>\n                    <Button\n                        bg={\"#F5C31F\"}\n                        width={\"100%\"}\n                        mb={5}\n                    >시작하기</Button>\n                    <Button\n                        onClick={onShare}\n                        fontWeight={\"normal\"}\n                        variant={'link'}>공유하기</Button>\n                </Stack>\n            </Stack>\n        </>\n\n    )\n}\n","/Users/gongsangheon/dev/personal/mindcraft-next/src/pages/index.tsx",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/service/AuthService.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/service/TestService.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/types/api.config.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/types/api.request.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/types/api.response.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/types/common.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/FromUtil.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/Indicator.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/Logger.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/PageUtil.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/Requester.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/dummy.ts",[],[],"/Users/gongsangheon/dev/personal/mindcraft-next/src/utils/AnimationUtil.ts",[],[],{"ruleId":"202","severity":1,"message":"203","line":6,"column":13,"nodeType":"204","endLine":6,"endColumn":41},{"ruleId":"202","severity":1,"message":"203","line":90,"column":21,"nodeType":"204","endLine":90,"endColumn":45},{"ruleId":"205","severity":1,"message":"206","line":32,"column":7,"nodeType":"207","endLine":32,"endColumn":9,"suggestions":"208","suppressions":"209"},{"ruleId":"205","severity":1,"message":"210","line":15,"column":8,"nodeType":"207","endLine":15,"endColumn":10,"suggestions":"211","suppressions":"212"},{"ruleId":"202","severity":1,"message":"203","line":106,"column":33,"nodeType":"204","endLine":106,"endColumn":106},{"ruleId":"202","severity":1,"message":"203","line":41,"column":21,"nodeType":"204","endLine":46,"endColumn":23},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTestDetail', 'id', and 'toMain'. Either include them or remove the dependency array.","ArrayExpression",["213"],["214"],"React Hook useEffect has missing dependencies: 'auth' and 'toMain'. Either include them or remove the dependency array.",["215"],["216"],{"desc":"217","fix":"218"},{"kind":"219","justification":"220"},{"desc":"221","fix":"222"},{"kind":"219","justification":"220"},"Update the dependencies array to be: [getTestDetail, id, toMain]",{"range":"223","text":"224"},"directive","","Update the dependencies array to be: [auth, toMain]",{"range":"225","text":"226"},[931,933],"[getTestDetail, id, toMain]",[479,481],"[auth, toMain]"]